@model Assig1.ViewModels.ExpiationsSearchViewModel

<div class="text-dark bg-gradient bg-warning p-2 my-2 border rounded">
    <h2>Expiations Index</h2>
</div>

<form method="get" asp-action="Index" asp-controller="Expiations">
    <div class="form-group">
        <label for="searchLsaText">Search by LSA Code: </label>
        <input type="text" id="searchLsaText" name="searchLsaText" class="form-control" placeholder="Search LSA Codes..." value="@Model.SearchLsaText" />
    </div>
    <div class="form-group">
        <label for="offenceCode">Search by Offence Code: </label>
        <input type="text" id="offenceCode" name="offenceCode" class="form-control" placeholder="Search Offence Codes..." value="@Model.OffenceCode" />
    </div>

    <select name="sortOrder" id="sortOrder">
        <option value="" selected>Expiation ID</option>
        <option value="lsa_asc">LSA Code Ascending</option>
        <option value="lsa_desc">LSA Code Descending</option>
        <option value="time_asc">Time Ascending</option>
        <option value="time_desc">Time Descending</option>
        <option value="bac_desc">BAC</option>
    </select>
    
    <button type="submit">Search</button>
</form>

<h3>Expiations</h3>
<div>
    @foreach (var state in Model.TotalOffenceCountByState)
    {
        <h3>@state.Key</h3>
        <p>Total Offences: @state.Value</p>
    }
</div>
@if(Model.TotalExpiations > 0)
{
    <h3>Statistics</h3>
    <ul>
        <li>Total Expiations : @Model.TotalExpiations</li>
        <li>Max Speed : @Model.MaxSpeed km/h</li>
        <li>Average Speed : @Model.AverageSpeed?.ToString("F2") km/h</li>
        <li>Max BAC : @Model.MaxBAC</li>
        <li>Max Fine : $@Model.MaxFine</li>
        <li>Average Fine : $@Model.AverageFine?.ToString("F2")</li>
    </ul>
    
    <h3>Number of records: @Model.Expiations.Count()</h3>

    <table class="table table-striped">
        <thead>
            <tr>
                <th>Expiation ID</th>
                <th>Total Fee</th>
                <th>Incident Time</th>
                <th>Incident Date</th>
                <th>Vehicle Speed</th>
                <th>LSA Code</th>
                <th>BAC Content</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var expiation in Model.Expiations)
            {
                <tr>
                    <td>@expiation.ExpId</td>
                    <td>$@expiation.TotalFeeAmt</td>
                    <td>@expiation.IncidentStartTime</td>
                    <td>@expiation.IncidentStartDate</td>
                    <td>@expiation.VehicleSpeed km/h</td>
                    <td>@expiation.LsaCode</td>
                    <td>@expiation.BacContentExp</td>
                    <td>
                        <a href="@Url.Action("Detail", "Expiations", new { id = expiation.ExpId })">Details</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    @if (Model.Expiations.HasPreviousPage)
    {
        <a asp-controller="Expiations" asp-action="Index" asp-route-SearchLsaText="@Model.SearchLsaText" asp-route-OffenceCode="@Model.OffenceCode" asp-route-page="@(Model.Expiations.PageNumber - 1)">Previous</a>

    }
    @for (int i = 1; i <= Model.Expiations.PageCount; i++)
    {
        if (i == Model.Expiations.PageNumber)
        {
            <strong>@i</strong>
        }
        else
        {
            <a asp-controller="Expiations" asp-action="Index" asp-route-SearchLsaText="@Model.SearchLsaText" asp-route-OffenceCode="@Model.OffenceCode" asp-route-page="@i">@i</a>
        }
    }

    @if (Model.Expiations.HasNextPage)
    {
        <a asp-controller="Expiations" asp-action="Index" asp-route-SearchLsaText="@Model.SearchLsaText" asp-route-OffenceCode="@Model.OffenceCode" asp-route-page="@(Model.Expiations.PageNumber + 1)">Next</a>
    }
}
else
{
    <p>Search for an offence!</p>
}
