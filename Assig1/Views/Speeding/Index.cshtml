@model Assig1.ViewModels.SpeedingCategoriesSearchViewModel
@using X.PagedList;

<div class="text-dark bg-gradient bg-warning p-2 my-2 border rounded">
    <h2>Speeding Categories Index</h2>
</div>

<form asp-controller="Speeding" asp-action="Index" method="get">
    <div action="form-group">
        <label for="SearchText">@Html.DisplayNameFor(m => m.SearchText)</label>
        <input asp-for="SearchText" id="AutoComplete" class="form-control" placeholder="Enter offence description" autocomplete="off"/>
    </div>

    <div class="form-group mt-2">
        <label asp-for="SpeedCode">@Html.DisplayNameFor(m => m.SpeedCode)</label>
        <select asp-for="SpeedCode" asp-items="Model.SpeedingCategories.Select(c => new SelectListItem { Value = c.SpeedCode, Text = c.SpeedDescription })" class="form-control">
            <option value="">Select a category</option>
        </select>
    </div>

    <button type="submit" class="btn btn-primary mt-2">Search</button>
</form>

<h3>Speeding Categories</h3>
@if (Model.Offences == null)
{
    <p>Search for an offence!</p>
}
else if (!Model.Offences.Any())
{
    <p>No offences found.</p>
}
else
{
    <div class="row">
        @foreach (var category in Model.SpeedingCategories)
        {
            <div class="col-md-4">
                <div class="card mb-3">
                    <div class="card-body">
                        <h5 class="card-title">@category.SpeedDescription</h5>
                        <p class="card-text">Speed Code: @category.SpeedCode</p>
                        <a href="@Url.Action("SpeedCodeBreakdown", "Speeding", new { speedCode = category.SpeedCode })">Data Breakdown</a>
                    </div>
                </div>
            </div>
        }
    </div>


    <h3>Number of records: @Model.Offences.Count()</h3>

    <table class="table table-striped">
        <thead>
            <tr>
                <th>Description</th>
                <th>Offence Code</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var offence in Model.Offences)
            {
                <tr>
                    <td>@offence.Description</td>
                    <td>@offence.OffenceCode</td>
                    <td>
                        <a href="@Url.Action("SpeedingDetails", "Speeding", new { offenceCode = offence.OffenceCode })">View Details</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    @if (Model.Offences.HasPreviousPage)
    {
        <a asp-controller="Speeding" asp-action="Index" asp-route-SearchText="@Model.SearchText" asp-route-SpeedCode="@Model.SpeedCode" asp-route-page="@(Model.Offences.PageNumber - 1)">Previous</a>

    }
    @for (int i = 1; i <= Model.Offences.PageCount; i++)
    {
        if (i == Model.Offences.PageNumber)
        {
            <strong>@i</strong>
        }
        else
        {
            <a asp-controller="Speeding" asp-action="Index" asp-route-SearchText="@Model.SearchText" asp-route-SpeedCode="@Model.SpeedCode" asp-route-page="@i">@i</a>
        }
    }

    @if (Model.Offences.HasNextPage)
    {
        <a asp-controller="Speeding" asp-action="Index" asp-route-SearchText="@Model.SearchText" asp-route-SpeedCode="@Model.SpeedCode" asp-route-page="@(Model.Offences.PageNumber + 1)">Next</a>
    }
}

@section Scripts {
    <script>
        $(document).ready(function () {
            $("#AutoComplete").keypress(function () {
                var title = $("#AutoComplete").val();
                if (title.length >= 3) {
                    $.get("/Speeding/SearchSuggestions", { inputString: title }, function (data) {
                        $("#AutoComplete").autocomplete({
                            source: data
                        })
                    })
                }
            })
        });
    </script>
}