@model Assig1.ViewModels.Offence_OffenceDetail

<h1>Offence Details for @Model.OffenceCode</h1>
<div class="row">
    <div class="col-md-6">
        <div class="card mb-4">
            <div class="card-body">
                <h5 class="card-title">@Html.DisplayNameFor(m => m.TotalFeePaid)</h5>
                <p class="card-text">@Html.DisplayFor(m => m.TotalFeePaid)</p>
            </div>
        </div>
    </div>
    <div class="col-md-6">
        <div class="card mb-4">
            <div class="card-body">
                <h5 class="card-title">@Html.DisplayNameFor(m => m.TotalExpiations)</h5>
                <p class="card-text">@Html.DisplayFor(m => m.TotalExpiations)</p>
            </div>
        </div>
    </div>
    <div class="col-md-6">
        <div class="card mb-4">
            <div class="card-body">
                <h5 class="card-title">@Html.DisplayNameFor(m => m.Frequency)</h5>
                <p class="card-text">@Model.Frequency.ToString("F2")% of offences</p>
            </div>
        </div>
    </div>
    <div class="col-md-6">
        <div class="card mb-4">
            <div class="card-body">
                <h5 class="card-title">@Html.DisplayNameFor(m => m.MostCommonLsaCode)</h5>
                <p class="card-text">@Model.MostCommonLsaCode</p>
            </div>
        </div>
    </div>
    <div class="col-md-6">
        <div class="card mb-4">
            <div class="card-body">
                <h5 class="card-title">@Html.DisplayNameFor(m => m.MostCommonState)</h5>
                <p class="card-text">@Model.MostCommonState</p>
            </div>
        </div>
    </div>
</div>

<div id="monthly-expiations-chart"></div>
<script>
    // wait for everything to load
    document.addEventListener("DOMContentLoaded", function () {
        // get the expiation data from the model
        const data = @Html.Raw(Json.Serialize(Model.MonthlyExpiations));

        // preparing data for D3, so: an array of month objects for the x-axis and counts for the y-axis
        const months = data.map(d => new Date(d.Year, d.Month - 1)); // note that January = 0 here, hence -1
        const counts = data.map(d => d.Count);

        // establishes dimensions for SVG container
        const svgWidth = 600;
        const svgHeight = 400;

        // create the SVG container with width and height
        const svg = d3.select('#monthly-expiations-chart')
            .append("svg")
            .attr("width", svgWidth)
            .attr("height", svgHeight)

        const xScale = d3.scaleBand() // scale for the x-axis using months array
            .domain(months.map((d, i) => d.toLocaleString('default', { month: 'long' }) + ' ' + d.getFullYear())) // formatting the display date
            .range([0, svgWidth])
            .padding(0.1);

        const yScale = d3.scaleLinear()
            .domain([0, d3.max(counts)]) // sets the domain from 0 to max count
            .range([svgHeight, 0])

    });
</script>

<form method="get">
    <input type="hidden" name="offenceCode" value="@Model.OffenceCode" />

    <strong>Filter Expiations by Date Range:</strong>

    </br>

    <label for="startDate">Start Date:</label>
    <input type="date" name="startDate" id="startDate" />

    <label for="endDate">End Date: </label>
    <input type="date" name="endDate" id="endDate" />

    <button type="submit">Filter</button>
</form>

<br />

<table class="table">
    <thead>
        <tr>
            <th>Expiation ID</th>
            <th>Total Fee Amount</th>
            <th>Date</th>
            <th>Time</th>
            <th>LSA Code</th>
            <th>State</th>
            <th>Speed Limit</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var expiation in Model.Expiations){
            <tr>
                <td>@expiation.ExpId</td>
                <td>@expiation.TotalFeeAmt</td>
                <td>@expiation.IncidentStartDate</td>
                <td>@expiation.IncidentStartTime</td>
                <td>@expiation.LsaCode</td>
                <td>@expiation.DriverState</td>
                <td>@expiation.LocationSpeedLimit</td>
                <td>
                    <a href="@Url.Action("Detail", "Expiations", new { id = expiation.ExpId })">Details</a>
                </td>
            </tr>
        }
    </tbody>
</table>